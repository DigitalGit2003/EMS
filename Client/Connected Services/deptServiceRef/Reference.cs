//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.deptServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/EMS")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="deptServiceRef.IDepartmentService")]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/addDepartment", ReplyAction="http://tempuri.org/IDepartmentService/addDepartmentResponse")]
        string addDepartment(Client.deptServiceRef.Department d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/addDepartment", ReplyAction="http://tempuri.org/IDepartmentService/addDepartmentResponse")]
        System.Threading.Tasks.Task<string> addDepartmentAsync(Client.deptServiceRef.Department d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/updateDepartment", ReplyAction="http://tempuri.org/IDepartmentService/updateDepartmentResponse")]
        string updateDepartment(int dept_id, Client.deptServiceRef.Department d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/updateDepartment", ReplyAction="http://tempuri.org/IDepartmentService/updateDepartmentResponse")]
        System.Threading.Tasks.Task<string> updateDepartmentAsync(int dept_id, Client.deptServiceRef.Department d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/deleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/deleteDepartmentResponse")]
        string deleteDepartment(string dept_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/deleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/deleteDepartmentResponse")]
        System.Threading.Tasks.Task<string> deleteDepartmentAsync(string dept_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartmentNames", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentNamesResponse")]
        string[] getDepartmentNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartmentNames", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentNamesResponse")]
        System.Threading.Tasks.Task<string[]> getDepartmentNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartmentLocations", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentLocationsResponse")]
        string[] getDepartmentLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartmentLocations", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentLocationsResponse")]
        System.Threading.Tasks.Task<string[]> getDepartmentLocationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : Client.deptServiceRef.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.ClientBase<Client.deptServiceRef.IDepartmentService>, Client.deptServiceRef.IDepartmentService {
        
        public DepartmentServiceClient() {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string addDepartment(Client.deptServiceRef.Department d) {
            return base.Channel.addDepartment(d);
        }
        
        public System.Threading.Tasks.Task<string> addDepartmentAsync(Client.deptServiceRef.Department d) {
            return base.Channel.addDepartmentAsync(d);
        }
        
        public string updateDepartment(int dept_id, Client.deptServiceRef.Department d) {
            return base.Channel.updateDepartment(dept_id, d);
        }
        
        public System.Threading.Tasks.Task<string> updateDepartmentAsync(int dept_id, Client.deptServiceRef.Department d) {
            return base.Channel.updateDepartmentAsync(dept_id, d);
        }
        
        public string deleteDepartment(string dept_name) {
            return base.Channel.deleteDepartment(dept_name);
        }
        
        public System.Threading.Tasks.Task<string> deleteDepartmentAsync(string dept_name) {
            return base.Channel.deleteDepartmentAsync(dept_name);
        }
        
        public string[] getDepartmentNames() {
            return base.Channel.getDepartmentNames();
        }
        
        public System.Threading.Tasks.Task<string[]> getDepartmentNamesAsync() {
            return base.Channel.getDepartmentNamesAsync();
        }
        
        public string[] getDepartmentLocations() {
            return base.Channel.getDepartmentLocations();
        }
        
        public System.Threading.Tasks.Task<string[]> getDepartmentLocationsAsync() {
            return base.Channel.getDepartmentLocationsAsync();
        }
    }
}
